AppType=StandardJava
Build1=Default,b4j.example
Group=App
Library1=jcore
Library2=json
Library3=b4xcollections
Module1=Anchor
Module10=Em
Module11=Form
Module12=H1
Module13=H2
Module14=H3
Module15=H4
Module16=H5
Module17=H6
Module18=Head
Module19=Html
Module2=Body
Module20=HtmlTable
Module21=Icon
Module22=Img
Module23=Input
Module24=Italic
Module25=Label
Module26=Li
Module27=Meta
Module28=MiniHtmlParser
Module29=Ol
Module3=Bold
Module30=Option
Module31=Paragraph
Module32=Plain
Module33=Span
Module34=Strong
Module35=Tag
Module36=Tbody
Module37=Td
Module38=Textarea
Module39=Tfoot
Module4=Br
Module40=Th
Module41=Thead
Module42=Tr
Module43=Ul
Module44=Underline
Module5=Button
Module6=Del
Module7=Div
Module8=Document
Module9=Dropdown
NumberOfFiles=0
NumberOfLibraries=3
NumberOfModules=44
Version=10.3
@EndOfDesignText@
#Region Project Attributes
	#CommandLineArgs:
	#MergeLibraries: True
#End Region
#Region Macros
'#Macro: Title, Export as zip, ide://run?file=%B4X%\Zipper.jar&Args=%PROJECT_NAME%.zip
#Macro: Title, Update Version, ide://run?file=%JAVABIN%\java.exe&Args=-jar&Args=%ADDITIONAL%\..\B4X\manifest-writer.jar&Args=%PROJECT%&Args=%PROJECT%&Args=Version&Args=0.30
#Macro: Title, Create B4xLib, ide://run?file=%JAVABIN%\jar.exe&WorkingDirectory=..&args=-cMf&args=..\release\%PROJECT_NAME%.b4xlib&args=Snippets&args=*.bas&args=manifest.txt&args=LICENSE
#Macro: Title, Release folder, ide://run?file=%WINDIR%\SysWOW64\explorer.exe&Args=%PROJECT%\..\release
#Macro: Title, Copy to AddLibs, ide://run?file=%COMSPEC%&args=/c&args=copy&args=%PROJECT%\..\release\*.b4xlib&args=%ADDITIONAL%\..\B4X
#End Region
Sub Process_Globals
	Private HtmlParser As MiniHtmlParser
	Private Const BLUE As Int = -16776961 'ignore
End Sub

Sub AppStart (Args() As String)
	HtmlParser.Initialize
	Dim doc As Document
	doc.Initialize
	doc.AppendDocType
	' begin test for supporting unusual case that should not be use 
	'doc.Append(Html.comment(" A comment ").build)
	'doc.Append(Html.comment2(" comment 2 ").build).Append2("same line text")
	'doc.Append(Div.cls("test").Text("Testing").add(Html.create("").Text("Out side")).build)
	'doc.Append(H1.cls("text-uppercase").Text("Title").build)
	' end test
	doc.Append(GenerateHtml)
	Dim content As String = doc.ToString
	'LogColor(content, BLUE)
	File.WriteString(File.DirApp, "index.html", content)
	'StartMessageLoop
End Sub

'Sub GenerateHtml As String
'	Dim html1 As Tag = Html.lang("en")
'	html1.comment(" generated by MiniHTML ")
'	Head.up(html1).responsive _
'	.title("MiniHTML Demo") _
'	.linkCss("css/bootstrap.min.css") _
'	.script("js/bootstrap.bundle.min.js")
'	Dim body1 As Tag = Body.up(html1)
'	Dim main1 As Tag = Html.create("main").up(body1) _
'	.cls("container") _
'	.sty("margin-top: 30px")
'	main1.comment(" Example: https://getbootstrap.com/docs/5.3/examples/heroes/ ")
'	Dim div1 As Tag = Div.cls("container").up(main1)
'	Dim div2 As Tag = Div.cls("row align-items-center py-5").up(div1)
'	Dim col1 As Tag = Div.cls("col-lg-7 text-center").up(div2)
'	H1.cls("display-4 fw-bold lh-1 text-body-emphasis mb-3") _
'	.Text("Vertically centered hero sign-up form").up(col1)
'	Paragraph.cls("col-lg-10 fs-4") _
'	.Text($"Below is an example form built entirely with Bootstrap’s form controls. 
'	Each required form group has a validation state that can be triggered by attempting 
'	to submit the form without completing it."$).up(col1)
'
'	Dim loginForm As String = $"<form class="p-4 p-md-5 border rounded-3 bg-body-tertiary">
'          <div class="form-floating mb-3">
'            <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com">
'            <label for="floatingInput">Email address</label>
'          </div>
'          <div class="form-floating mb-3">
'            <input type="password" class="form-control" id="floatingPassword" placeholder="Password">
'            <label for="floatingPassword">Password</label>
'          </div>
'          <div class="checkbox mb-3">
'            <label>
'              <input type="checkbox" value="remember-me"> Remember me
'            </label>
'          </div>
'          <button class="w-100 btn btn-lg btn-primary" type="submit">Sign up</button>
'          <hr class="my-4">
'          <small class="text-body-secondary">By clicking Sign up, you agree to the terms of use.</small>
'        </form>"$
'
'	Dim root As HtmlNode = HtmlParser.Parse(loginForm)
'	If root.IsInitialized Then
'		Dim newTag As Tag = HtmlParser.ConvertToTag(root.Children.Get(0))
'		Div.up(div2).cls("col-lg-5 col-md-10 mx-auto").add(newTag)
'	End If
'	Return html1.build
'End Sub

Sub GenerateHtml As String
	Dim html1 As Tag = Html.lang("en")
	html1.comment(" generated by MiniHTML ")
	Head.up(html1).responsive _
	.Title("MiniHTML Demo") _
	.linkcss("css/bootstrap.min.css") _
	.script("js/bootstrap.bundle.min.js")
	Dim main1 As Tag = Body.up(html1).add(Html.create("main")) _
	.cls("container") _
	.sty("margin-top: 30px")
	'H1.text("Hello, World!").up(main1)
	'Dim form1 As Tag = main1.Add(Div.cls("card")) _
	'.Add(Div.cls("card-body")) _
	'.Add(Form.action("#"))
	'form1.Add(Div.cls("form-group")) _
	'.Add(Label.forId("email").text("Email")) _
	'.AddSibling(Input.typeOf("email").id("email").cls("form-control").required)
	'form1.Add(Div.cls("text-center")) _
	'.Add(Button.typeOf("submit").text("Submit").cls("btn btn-primary mt-3 text-center"))
	'Paragraph.text("This is a ") _
	'.Add2(Span.text("red text").cls("text-danger")) _
	'.text(" in  a ") _
	'.Add2(Bold.text("paragraph")).up(main1)
	main1.comment(" Example: https://getbootstrap.com/docs/5.3/examples/heroes/ ")
	Dim container As Tag = main1.Add(Div.cls("container"))
	Dim row1 As Tag = container.Add(Div.cls("row align-items-center py-5"))
	Dim col1 As Tag = row1.Add(Div.cls("col-lg-7 text-center"))
	col1.Add(H1.cls("display-4 fw-bold lh-1 text-body-emphasis mb-3")) _
	.Text("Vertically centered hero sign-up form")
	Paragraph.cls("col-lg-10 fs-4") _
	.Text($"Below is an example form built entirely with Bootstrap’s form controls. 
	Each required form group has a validation state that can be triggered by attempting 
	to submit the form without completing it."$) _
	.up(col1)
	
	Dim loginForm As String = $"<form class="p-4 p-md-5 border rounded-3 bg-body-tertiary">
          <div class="form-floating mb-3">
            <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com">
            <label for="floatingInput">Email address</label>
          </div>
          <div class="form-floating mb-3">
            <input type="password" class="form-control" id="floatingPassword" placeholder="Password">
            <label for="floatingPassword">Password</label>
          </div>
          <div class="checkbox mb-3">
            <label>
              <input type="checkbox" value="remember-me"> Remember me
            </label>
          </div>
          <button class="w-100 btn btn-lg btn-primary" type="submit">Sign up</button>
          <hr class="my-4">
          <small class="text-body-secondary">By clicking Sign up, you agree to the terms of use.</small>
        </form>"$

	Dim root As HtmlNode = HtmlParser.Parse(loginForm)
	If root.IsInitialized Then
		Dim newTag As Tag = HtmlParser.ConvertToTag(root.Children.Get(0))
		Div.up(row1).cls("col-lg-5 col-md-10 mx-auto").add(newTag)
	End If	
	Return html1.build
End Sub